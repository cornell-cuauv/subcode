# The below are highly dependent on trim
center_of_buoyancy = [-0.009756378616, -0.0004325256647, 0.009756378616]
buoyancy_force = 373.7 # green: 342.5, black: 330 FUDGED to assume postively buoyant sub
gravity_force = 323.23120

# only used for partially submerged buoyancy force calculation, non critical
sub_height = 0.50

#[x,y,z] position of the DVL relative to center of mass.
dvl_absolute_position = [-0.084074, 0.00019558, 0.1642364]

# distance from dvl beam to axis of rotation used to offset velocity
# to account for misaligned reference point and dvl position
# for minisub, probably doesn't matter
# **caculate this using conf/frame-rotation-calc.py**
dvl_offset = 0.08056941238630762
dvl_reversed = true
# such that <dvl-reported distance> * dvl_scaling_factor == <real distance>
dvl_scaling_factor = 1
#dvl_scaling_factor = 0.3481225539

# Moments of inertia (kg * m^2) from solidworks.
# In the model frame.
I = [[ 0.7570, -0.0193, -0.0157],
     [-0.0193,  1.9297, -0.0038],
     [-0.0157, -0.0038,  2.0260]]

# Ib and body_rot calculated using auv-body-frame-calc.
Ib = [0.756487, 1.92989, 2.02633]
# A normalized quaternion representing rotation from the body to the model frame.
btom_rq = [0.999321, 0.0368397, 0.000307939, 0.000223085]
cwhe_axes = [69.35220358000004, 69.35220358, 106.68669116000001, 24.493862265233396, 33.82699177560289, 50.700275188176896]
thruster_minimums = [-64.547306068, -64.547306068, -112.092200861, -24.3638793369, -33.5977377427, -50.2038399041]
thruster_maximums = [74.15710109200003, 74.15710109199999, 101.28118145900001, 24.623845193585087, 34.056245808511505, 51.196710472260214]

quaternion_filtering = 1
dvl_present = true
use_dvl_for_depth = false
water_depth = 4.2672

gx_hpr = [180.0, 0.0, 0.0] # Note: You probably want to re-tare the GX rather than use this offset


[[thrusters]]
name = "fore_port"
type = "T200"
pos = [0.2469896, -0.2537206, 0.0295402]
heading_pitch = [0.0, 90.0]
reversed = true
broken = false

[[thrusters]]
name = "port"
type = "T200"
pos = [-0.0131318, -0.3541344, 0.0425196]
heading_pitch = [0.0, 0.0]
reversed = false
broken = false

[[thrusters]]
name = "aft_port"
type = "T200"
pos = [-0.2540254, -0.2537206, 0.0295402]
heading_pitch = [0.0, 90.0]
reversed = false
broken = false

[[thrusters]]
name = "sway_aft"
type = "T200"
pos = [-0.4304638, -0.009017, 0.039118]
heading_pitch = [90.0, 0.0]
reversed = false
broken = false

[[thrusters]]
name = "aft_starboard"
type = "T200"
pos = [-0.2539746, 0.2502662, 0.0295402]
heading_pitch = [0.0, 90.0]
reversed = false
broken = false

[[thrusters]]
name = "starboard"
type = "T200"
pos = [-0.014224, 0.3606038, 0.0424688]
heading_pitch = [0.0, 0.0]
reversed = false
broken = false

[[thrusters]]
name = "fore_starboard"
type = "T200"
pos = [0.2469642, 0.2537206, 0.0295402]
heading_pitch = [0.0, 90.0]
reversed = true
broken = false

[[thrusters]]
name = "sway_fore"
type = "T200"
pos = [0.4304538, 0.012446, 0.0309118]
heading_pitch = [90.0, 0.0]
reversed = true
broken = false


[control_settings]
depth   = { kP = 2.60, kI = 0.04, kD = 5.00, rD = 0.30, ramp_speed = 0.5 }
pitch   = { kP = 0.10, kI = 0.02, kD = 5.00, rD = 30.0 }
heading = { kP = 0.30, kI = 0.03, kD = 14.00, rD = 20.0 }
velx    = { kP = 8.30, kI = 0.12, kD = 0.50, rD = 0.1547 }
vely    = { kP = 6.00, kI = 0.20, kD = 1.00, rD = 0.5 }
roll    = { kP = 0.10, kI = 0.00, kD = 2.00, rD = 30.0 }
quat    = { kP = 30.0, kI = 0.00, kD = 4.00 }


[[drag_planes]]
pos = [0.0, -0.12, 0.0]
normal = [1.0, 0.0, 0.0]
cD = 2.0
area = 0.1


# horizontal, produces drag when diving and pitching
[[uncompensated_drag_planes]]
pos = [0.25, 0.0, 0.0]
normal = [0.0, 0.0, 1.0]
cD = 2.0
area = 0.0


[sensors]
heading = "gx4.heading"
pitch = "gx4.pitch"
roll = "gx4.roll"

heading_rate = "gx4.ratez"
pitch_rate = "gx4.ratey"
roll_rate = "gx4.ratex"

velx = "dvl.velocity_x"
vely = "dvl.velocity_y"
velz = "dvl.velocity_z"

accelx = "gx4.accelx"
accely = "gx4.accely"
accelz = "gx4.accelz"

depth = "depth.depth"
dvl_altitude = "dvl.savg_altitude"
depth_offset = "depth.offset_mainsub"
quaternion = "gx4"

[measurement_error]
velSigma = 0.005
depthSigma = 1.0
accSigma = 1000.0

[components]
port_forecam = [0.0, 0.0, 0.0]
starboard_forecam = [0.0, 0.0, 0.0]
downcam = [0.0, 0.0, 0.0]
sonar = [0.0, 0.0, 0.0]


[cameras.forward]
type = "ueye"
id = 1
camera_name = "ueye_forward_polaris" # for configuration
width = 640
height = 512
position = [0.48, 0.15, -0.08]
orientation_hpr = [0.0, 0.0, 0.0]
rotate180 = true
rotate90 = false
# The optical sensor size of the CAMERA, width and height in mm
# This should typically be in the same ratio as the resolution, above.
sensor_size_wh_mm = [4.995, 3.746]
# The focal length of the LENS in mm
focal_length_mm = 3.5

[cameras.downward]
type = "zed"
id = 2
camera_name = "zed_downward_polaris" # for configuration
width = 2688
height = 1520
rotate180 = true
rotate90 = false
position = [0.0, 0.0, 0.15]
orientation_hpr = [0.0, -90.0, 0.0]

# The optical sensor size of the CAMERA, width and height in mm
# This should typically be in the same ratio as the resolution, above.
sensor_size_wh_mm = [4.76, 3.57]
focal_length_mm = 2.1

[vision_modules.record]
capture_sources = ["forward", "downward"]

[vision_modules.poster]
capture_sources = ["forward", "downward", "depth"]

[vision_modules.calibrate]
capture_sources = ["default"]

[vision_modules.auto_calibrate]
capture_sources = ["forward", "downward"]

[vision_modules.gate_vision]
capture_sources = ["forward"]

[vision_modules.find_red]
capture_sources = ["forward"]

[actuators]
bottom_torpedo = 8
top_torpedo = 4
manipulator_grab = 9
manipulator_release = 2

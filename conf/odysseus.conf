{
    // The below are highly dependent on trim
    "center_of_buoyancy": [-0.0005, -0.0025, -0.001],
    "buoyancy_force": 341.5,  // FUDGED to assume postively buoyant sub
    "gravity_force": 314.809539,

    // only used for partially submerged buoyancy force calculation, non critical
    "sub_height": 0.50,

    // Moments of inertia (kg * m^2) from solidworks.
    // In the model frame.
    "I": [[ 0.7570, -0.0193, -0.0157],
          [-0.0193, 1.9297, -0.0038],
          [-0.0157, -0.0038, 2.0260]],

    // Ib and body_rot calculated using auv-body-frame-calc.
    "Ib": [0.756487, 1.92989, 2.02633],
    // A normalized quaternion representing rotation from the body to the model
    // frame.
    "btom_rq": [0.999321, 0.0368397, 0.000307939, 0.000223085],
    // x was tweaked to reflect the limited real backwards thrust of our thrusters.
    "cwhe_axes": [37.33448758000003, 37.33448758, 74.66897516, 16.818671438861394, 23.26176023575009, 27.293563817796905],
    "thruster_minimums": [-36.13326320200003, -36.133263202, -77.071423916, -16.787946761965785, -23.125396283380027, -27.169454996776075],
    "thruster_maximums": [38.53571195800003, 38.535711958, 72.266526404, 16.849396115757003, 23.39812418812015, 27.417672638817734],
    "thrusters": [
        {
            "name": "fore_port",
            "type": "T200",
            "pos": [0.3682922, -0.202912, -0.0352978],
            "heading_pitch": [0, 90],
            "reversed": true,
            "broken": false
        },
        {
            "name": "port",
            "type": "T200",
            "pos": [0.062654, -0.3188122, -0.036898],
            "heading_pitch": [0, 0],
            "reversed": false,
            "broken": false
        },
        {

            "name": "aft_port",
            "type": "T200",
            "pos": [-0.2178734, -0.2152564, -0.0352978],
            "heading_pitch": [0, 90],
            "reversed": false,
            "broken": false
        },
        {
            "name": "sway_aft",
            "type": "T200",
            "pos": [-0.3055542, 0.001685, -0.0289478],
            "heading_pitch": [90, 0],
            "reversed": true,
            "broken": false
        },
        {
            "name": "aft_starboard",
            "type": "T200",
            "pos": [-0.2178734, 0.2186264, -0.0352978],
            "heading_pitch": [0, 90],
            "reversed": false,
            "broken": false
        },
        {
            "name": "starboard",
            "type": "T200",
            "heading_pitch": [0, 0],
            "pos": [0.062654, 0.3221822, -0.036898],
            "reversed": false,
            "broken": false
        },
        {
            "name": "fore_starboard",
            "type": "T200",
            "pos": [0.3682922, 0.206282, -0.0352978],
            "heading_pitch": [0, 90],
            "reversed": false,
            "broken": false
        },
        {
            "name": "sway_fore",
            "type": "T200",
            "pos": [0.5155614, 0.001685, -0.0289478],
            "heading_pitch": [90, 0],
            "reversed": false,
            "broken": false
        }

        //    "vector": [ [0, -1, 0], 360, "vector_status.position_port", "vector_desires.port", 61, false ] },
        //    "vector": [ [0, -1, 0], 360, "vector_status.position_starboard", "vector_desires.starboard", 793, false ] },
    ],

    "control_settings": {
        "depth":    { "kP": 0.70, "kI": 0.03, "kD": 2.00, "rD": 0.30, "ramp_speed": 0.5 },
        "pitch":    { "kP": 0.16, "kI": 0.01, "kD": 1.0, "rD": 50.0 },
        "heading":  { "kP": 0.15, "kI": 0.002, "kD": 8.00, "rD": 20.0 }, // Who would ever set an I term on heading?! .25, 0, 1.5
        "velx":     { "kP": 9.50, "kI": 0.12, "kD": 0.50, "rD": 0.1547 },
        "vely":     { "kP": 10.00, "kI": 0.20, "kD": 0.50, "rD": 0.5 },
        "roll":     { "kP": 0.17, "kI": 0.02, "kD": 10.00, "rD": 50.0 },
        "quat":     { "kP": 30.0, "kI": 0.00, "kD": 4.00 }
    },
    "quaternion_filtering": 1,

    "drag_planes": [
        // horizontal, produces drag when diving and pitching
        {
            "pos": [0.1, -0.25, 0],
            "normal": [0, 0, 1],
            "cD": 2.0,
            "area": 0.00
        },
        {
            "pos": [-0.25, 0, 0],
            "normal": [0, 0, 1],
            "cD": 2.0,
            "area": 0.00
        },
        {
            "pos": [0, 0, 0.2],
            "normal": [0, 0, 1],
            "cD": 2.0,
            "area": 0.1
        },
        // fore sway, produces drag when swaying and rolling
        {
            "pos": [0, 0, -0.10],
            "normal": [0, 1, 0],
            "cD": 2.0,
            "area": 0.20
        },
        // aft sway
        {
            "pos": [0, 0, 0.10],
            "normal": [0, 1, 0],
            "cD": 2.0,
            "area": 0.2
        },
        // vertical, produces drag when going forward and yawing
        {
            "pos": [0, -0.25, 0],
            // "normal": [0.7, 0, -0.7],
            "normal": [1, 0, 0],
            "cD": 2.0,
            "area": 0.04
        },
        {
            "pos": [0, 0.25, 0],
            // "normal": [0.949, 0, 0.316],
            "normal": [1, 0, 0],
            "cD": 2.0,
            "area": 0.00
        }
    ],
    // uncompensated drag, to simulate drag that is not accounted for by the controller
    // (or that the controller can't efectively account for)
    "uncompensated_drag_planes": [
        // horizontal, produces drag when diving and pitching
        {
            "pos": [0.25, 0, 0],
            "normal": [0, 0, 1],
            "cD": 2.0,
            "area": 0.25
        },
        {
            "pos": [-0.25, 0, 0],
            "normal": [0, 0, 1],
            "cD": 2.0,
            "area": 0.25
        }
    ],

    "dvl_present": true,
    "use_dvl_for_depth": false,
    "water_depth": 4.2672,
    "sensors": {
        "depth": "depth.depth",
        "dvl_altitude": "dvl.savg_altitude",
        "depth_offset": "depth.offset_mainsub",
        "heading_rate": "gx4.ratez",
        "pitch_rate": "gx4.ratey",
        "roll_rate": "gx4.ratex",
        "quaternion": "gx4",

        "velx": "dvl.velocity_x",
        "vely": "dvl.velocity_y",
        "velz": "dvl.velocity_z"
    },

    "gx_hpr": [180, 0, 0],

    "measurement_error": {
        "velSigma": 0.005,
        "depthSigma": 1,
        "accSigma": 1000
    },


    "components": {
        "port_forecam": [0.0, 0.0, 0.0],
        "starboard_forecam": [0.0, 0.0, 0.0],
        "downcam": [0.0, 0.0, 0.0],
        "sonar": [0.0, 0.0, 0.0]
    },

    "cameras": {
        "forward": {
            "type": "ueye",
            "id": 1,
            "camera_name": "ueye_forward_odysseus", // for configuration
            "width": 640,
            "height": 512,
            "position": [0.48, 0.15, -0.08],
            "rotate180": "false",
            "orientation_hpr":  [0, 0, 0],

            // The optical sensor size of the CAMERA, width and height in mm
            // This should typically be in the same ratio as the resolution, above.
            "sensor_size_wh_mm": [7.2, 5.4],
            // The focal length of the LENS in mm
            "focal_length_mm": 3.6
        },

        "downward": {
            "type": "ueye",
            "id": 2,
            "camera_name": "ueye_downward_odysseus", // for configuration
            "width": 1600,
            "height": 1200,
            "rotate180": "false",
            "rotate90": "false",
            "position": [0.0, 0.0, 0.15],
            "orientation_hpr": [0, -90, 0],

            // The optical sensor size of the CAMERA, width and height in mm
            // This should typically be in the same ratio as the resolution, above.
            "sensor_size_wh_mm": [4.76, 3.57],
            "focal_length_mm": 3.5
        }
    },

    "vision_modules": [
        {"name": "bicolor_gate", "capture_sources": ["forward"]},
        //{"name": "dice", "capture_sources": ["forward"]},
        // {"name": "torpedoes", "capture_sources": ["forward"]},
        {"name": "path", "capture_sources": ["downward"]},
        //{"name": "roulette", "capture_sources": ["downward"]},
        //{"name": "cash_in_forward", "capture_sources": ["forward"]},
        //{"name": "cash_in_downward", "capture_sources": ["downward"]},
        {"name": "record", "capture_sources": ["forward", "downward"]},
        {"name": "poster", "capture_sources": ["forward", "downward"]}
    ],

    "actuators": {
        "left_marker": 4,
        "left_torpedo" : 5,
        "right_marker": 6,
        "right_torpedo" : 7,
        "left_piston_extend" : 10,
        "left_piston_retract" : 11,
        "right_piston_extend" : 8,
        "right_piston_retract" : 9
    }
}
// vim: set filetype=javascript expandtab :
